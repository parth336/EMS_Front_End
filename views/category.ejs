<div class="container-fluid">
    <div class="row flex-nowrap">
        <div class="col-auto col-md-3 col-xl-2 px-sm-2 px-0 bg-dark">
            <div class="d-flex flex-column align-items-center align-items-sm-start px-3 pt-2 text-white min-vh-100">
                <a href="/" class="d-flex align-items-center pb-3 mb-md-0 me-md-auto text-white text-decoration-none">
                    <span class="fs-5 d-none d-sm-inline">EMS</span>
                </a>
                <ul class="nav nav-pills flex-column mb-sm-auto mb-0 align-items-center align-items-sm-start" id="menu">
                    <li class="nav-item">
                        <a href="#" class="nav-link align-middle px-0">
                            <i class="fa-solid fa-gauge"></i> <span class="ms-1 d-none d-sm-inline">Dashboard</span>
                        </a>
                    </li>
                    <li>
                        <a href="/admin/employees" class="nav-link px-0 align-middle">
                            <i class="fa-solid fa-user-group"></i> <span
                                class="ms-1 d-none d-sm-inline">Employees</span></a>
                    </li>
                    <li>
                        <a href="/admin/category" class="nav-link px-0 align-middle">
                            <i class="fa-solid fa-layer-group"></i> <span
                                class="ms-1 d-none d-sm-inline">Category</span></a>
                    </li>
                    <li>
                        <a href="/logout" class="nav-link px-0 align-middle">
                            <i class="fa-solid fa-right-from-bracket"></i> <span
                                class="ms-1 d-none d-sm-inline">Logout</span></a>
                    </li>
                </ul>
            </div>
        </div>
        <div class="col py-3">
            <div class="container">
                <div class="d-flex align-items-center m-3">
                    <div class="row">
                        <div class="col-6 d-flex align-items-center">
                            <h3>Categories</h3>
                        </div>
                        <div class="col-6 d-flex align-items-center">
                            <button class="btn btn-success" onclick="addCategory()">Add Category</button>
                        </div>
                    </div>
                </div>
                <table id="categoryTable" class="table table-striped table-responsive" style="width:100%">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <% for(var i=0; i<data.length; i++){ %>
                        <tr>
                            <td>
                                <%= data[i].id %>
                            </td>
                            <td>
                                <%= data[i].name %>
                            </td>
                            <td>
                                <button class="btn btn-sm btn-danger delete-category" id="category-<%= data[i].id %>">
                                    <i class="fa-solid fa-trash-can"></i>
                                </button>
                            </td>
                        </tr>
                        <% } %>
                </table>
            </div>
        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
    function addCategory() {
        Swal.fire({
            title: "Enter Category Name:",
            input: "text",
            inputAttributes: {
                autocapitalize: "off"
            },
            showCancelButton: true,
            confirmButtonText: "Add",
            showLoaderOnConfirm: true,
            preConfirm: async (name) => {
                try {
                    const addCategoryUrl = `/admin/addCategory`;
                    const response = await fetch(addCategoryUrl, {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ name: name })
                    });

                } catch (error) {
                    Swal.showValidationMessage(`Request failed: ${error}`);
                }
            },
            allowOutsideClick: () => !Swal.isLoading()
        }).then((result) => {
            if (result.isConfirmed) {
                Swal.fire({
                    icon: "success",
                    text: "Category Added!",
                });
            }
        });
    }
    $(".delete-category").on("click", function () {
        var id = $(this).attr("id");
        id = parseInt(id.replace("category-", ""));
        console.log(id, typeof (id));
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#3085d6",
            cancelButtonColor: "#d33",
            confirmButtonText: "Yes, delete it!"
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch("/admin/deletecategory", {
                        method: 'POST',
                        headers: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ id: id })
                    });
                    if (response.ok) {
                        $(this).closest("tr").remove();
                        Swal.fire({
                            title: "Deleted!",
                            text: "Category has been deleted.",
                            icon: "success"
                        });
                    }else{
                        Swal.fire({
                            title: "Error!",
                            text: "Server Error.",
                            icon: "Warning"
                        });
                    }
                } catch (error) {
                    Swal.showValidationMessage(`Request failed: ${error}`);
                }
            }
        });
    })
</script>